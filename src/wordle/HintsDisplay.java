package wordle;

import java.util.ArrayList;
import java.util.List;
/**
 * @author Larissa Goh 18029695
 * @author Noor Swadi 22167422
 * This class creates and keeps track of feedback for each guess.
 * Correct letters are marked in green, and misplaced letters are marked in yellow.
 * It stores a history of all feedback to show the player's guessing progress.
 */
public class HintsDisplay { 
    private final List<String> feedbackHistory;

    public HintsDisplay() {
        this.feedbackHistory = new ArrayList<>();
    }

    // METHOD GENERATED BY CHATGPT.
    
    public void saveFeedback(String guess, String secretWord) {
        StringBuilder feedback = new StringBuilder();
        boolean[] matchedInSecret = new boolean[secretWord.length()];  // Tracks matched letters in the secret word
        boolean[] matchedInGuess = new boolean[guess.length()];        // Tracks matched letters in the guess word

        // First pass: Identify exact matches (green)
        for (int i = 0; i < secretWord.length(); i++) {
            if (guess.charAt(i) == secretWord.charAt(i)) {
                feedback.append("\u001b[32m").append(guess.charAt(i)).append("\u001b[0m");  // Green
                matchedInSecret[i] = true;
                matchedInGuess[i] = true;
            } else {
                feedback.append(guess.charAt(i));  // Placeholder for non-matches
            }
        }

        // Second pass: Identify misplaced matches (yellow)
        for (int i = 0; i < guess.length(); i++) {
            if (!matchedInGuess[i]) {  // Only process non-exact matches
                char guessedChar = guess.charAt(i);
                for (int j = 0; j < secretWord.length(); j++) {
                    if (!matchedInSecret[j] && guessedChar == secretWord.charAt(j)) {
                        // Replace the character in feedback with yellow-marked one
                        int originalIndex = feedback.indexOf(String.valueOf(guessedChar), i);
                        if (originalIndex != -1) {
                            feedback.replace(originalIndex, originalIndex + 1, "\u001b[33m" + guessedChar + "\u001b[0m");  // Yellow
                            matchedInSecret[j] = true;
                            matchedInGuess[i] = true;
                            break;
                        }
                    }
                }
            }
        }

        feedbackHistory.add(feedback.toString());  // Store feedback
        //return feedback.toString();
    }

    // Displays the full guess history to show the progress. 
    public void displayFeedbackHistory() {
        System.out.println();
        for (String feedback : feedbackHistory) {
            System.out.println(feedback);
        }
        System.out.println();
    }
}
